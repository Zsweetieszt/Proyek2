#include <SDL2/SDL.h>
#include <stdbool.h>

#define SCREEN_WIDTH 800
#define SCREEN_HEIGHT 600
#define GRAVITY 0.5
#define JUMP_STRENGTH -10
#define PLAYER_SPEED 5
#define FLOOR_HEIGHT 500

typedef struct {
    float x, y;
    float velocityY;
    bool isJumping;
} Player;

void handleInput(SDL_Event event, Player *player) {
    if (event.type == SDL_KEYDOWN) {
        if (event.key.keysym.sym == SDLK_SPACE && !player->isJumping) {
            player->velocityY = JUMP_STRENGTH;
            player->isJumping = true;
        }
    }
}

void updatePlayer(Player *player) {
    player->velocityY += GRAVITY;
    player->y += player->velocityY;
    
    if (player->y >= FLOOR_HEIGHT) {
        player->y = FLOOR_HEIGHT;
        player->velocityY = 0;
        player->isJumping = false;
    }
}

void render(SDL_Renderer *renderer, Player player) {
    SDL_SetRenderDrawColor(renderer, 0, 0, 0, 255);
    SDL_RenderClear(renderer);
    
    SDL_SetRenderDrawColor(renderer, 255, 0, 0, 255);
    SDL_Rect playerRect = {player.x, (int)player.y, 50, 50};
    SDL_RenderFillRect(renderer, &playerRect);
    
    SDL_RenderPresent(renderer);
}

int main() {
    SDL_Init(SDL_INIT_VIDEO);
    SDL_Window *window = SDL_CreateWindow("Gravity System", SDL_WINDOWPOS_CENTERED, SDL_WINDOWPOS_CENTERED, SCREEN_WIDTH, SCREEN_HEIGHT, SDL_WINDOW_SHOWN);
    SDL_Renderer *renderer = SDL_CreateRenderer(window, -1, SDL_RENDERER_ACCELERATED);
    
    Player player = {100, FLOOR_HEIGHT, 0, false};
    
    bool running = true;
    SDL_Event event;
    while (running) {
        while (SDL_PollEvent(&event)) {
            if (event.type == SDL_QUIT) {
                running = false;
            }
            handleInput(event, &player);
        }
        
        updatePlayer(&player);
        render(renderer, player);
        SDL_Delay(16);
    }
    
    SDL_DestroyRenderer(renderer);
    SDL_DestroyWindow(window);
    SDL_Quit();
    
    return 0;
}